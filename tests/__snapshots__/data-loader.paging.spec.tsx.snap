// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`data-loader calling nextPage when already loading a page ignores the action 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 2,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 3,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "success": true,
      "type": "none",
    },
    "status": "Fetching",
  },
}
`;

exports[`data-loader paged component supports being re-rendered 1`] = `
Object {
  "loadAllCompletedCalled": 2,
  "loadDataCount": 2,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 4,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Array [
        "Test2",
      ],
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`data-loader paged component supports being re-rendered 2`] = `
Object {
  "loadAllCompletedCalled": 2,
  "loadDataCount": 2,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 4,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Array [
        "Test2",
      ],
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`data-loader refresh causes page to go back to page 1 1`] = `
Object {
  "loadAllCompletedCalled": 3,
  "loadDataCount": 3,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 6,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Array [
        "Test",
      ],
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`data-loader supports paged data 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 2,
  "renderParams": Object {
    "id": "testKey",
    "page": 1,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Array [
        "Test",
      ],
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`data-loader supports paged data 2`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 2,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 3,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "success": true,
      "type": "none",
    },
    "status": "Fetching",
  },
}
`;

exports[`data-loader supports paged data 3`] = `
Object {
  "loadAllCompletedCalled": 2,
  "loadDataCount": 2,
  "renderActions": Object {
    "nextPage": [Function],
    "refresh": [Function],
  },
  "renderCount": 4,
  "renderParams": Object {
    "id": "testKey",
    "page": 2,
    "paging": Object {
      "pageSize": 10,
    },
  },
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Array [
        "Test2",
      ],
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;
