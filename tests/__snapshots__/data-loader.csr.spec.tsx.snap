// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Client side render client render after SSR with data should not fetch data 1`] = `
Object {
  "events": Array [],
  "loadAllCompletedCalled": 0,
  "loadDataCount": 0,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 1,
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": true,
      "hasData": true,
      "result": Object {
        "result": "Success from server!",
      },
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render loads data when props change 1`] = `
Object {
  "events": Array [
    Object {
      "state": Object {},
      "type": "state-changed",
    },
    Object {
      "state": Object {
        "59edd2a8": Object {
          "data": Object {
            "hasData": false,
          },
          "lastAction": Object {
            "success": true,
            "type": "none",
          },
          "status": "Fetching",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "begin-loading-event",
    },
    Object {
      "state": Object {
        "59edd2a8": Object {
          "data": Object {
            "dataFromServerSideRender": false,
            "hasData": true,
            "result": Object {
              "result": "Success props change!",
            },
          },
          "lastAction": Object {
            "success": true,
            "type": "fetch",
          },
          "status": "Idle",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "end-loading-event",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "data-load-completed",
    },
    Object {
      "state": Object {},
      "type": "state-changed",
    },
    Object {
      "state": Object {
        "44f8a95a": Object {
          "data": Object {
            "hasData": false,
          },
          "lastAction": Object {
            "success": true,
            "type": "none",
          },
          "status": "Fetching",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "44f8a95a",
        "resourceType": "testDataType",
      },
      "type": "begin-loading-event",
    },
    Object {
      "state": Object {
        "44f8a95a": Object {
          "data": Object {
            "dataFromServerSideRender": false,
            "hasData": true,
            "result": Object {
              "result": "Success props change 2!",
            },
          },
          "lastAction": Object {
            "success": true,
            "type": "fetch",
          },
          "status": "Idle",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "44f8a95a",
        "resourceType": "testDataType",
      },
      "type": "end-loading-event",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "44f8a95a",
        "resourceType": "testDataType",
      },
      "type": "data-load-completed",
    },
  ],
  "loadAllCompletedCalled": 2,
  "loadDataCount": 2,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 4,
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Object {
        "result": "Success props change 2!",
      },
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should pass loaded data once promise resolves 1`] = `
Object {
  "events": Array [
    Object {
      "state": Object {},
      "type": "state-changed",
    },
    Object {
      "state": Object {
        "59edd2a8": Object {
          "data": Object {
            "hasData": false,
          },
          "lastAction": Object {
            "success": true,
            "type": "none",
          },
          "status": "Fetching",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "begin-loading-event",
    },
    Object {
      "state": Object {
        "59edd2a8": Object {
          "data": Object {
            "dataFromServerSideRender": false,
            "hasData": true,
            "result": Object {
              "result": "Success resolved!",
            },
          },
          "lastAction": Object {
            "success": true,
            "type": "fetch",
          },
          "status": "Idle",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "end-loading-event",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "data-load-completed",
    },
  ],
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 2,
  "renderProps": Object {
    "data": Object {
      "dataFromServerSideRender": false,
      "hasData": true,
      "result": Object {
        "result": "Success resolved!",
      },
    },
    "lastAction": Object {
      "success": true,
      "type": "fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should start loading data if not loaded 1`] = `
Object {
  "events": Array [
    Object {
      "state": Object {},
      "type": "state-changed",
    },
    Object {
      "state": Object {
        "59edd2a8": Object {
          "data": Object {
            "hasData": false,
          },
          "lastAction": Object {
            "success": true,
            "type": "none",
          },
          "status": "Fetching",
        },
      },
      "type": "state-changed",
    },
    Object {
      "data": Object {
        "resourceLoadParamsHash": "59edd2a8",
        "resourceType": "testDataType",
      },
      "type": "begin-loading-event",
    },
  ],
  "loadAllCompletedCalled": 0,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 1,
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "success": true,
      "type": "none",
    },
    "status": "Fetching",
  },
}
`;
